name: Project Board Automation

on:
  issues:
    types: [opened, reopened, closed]
  pull_request:
    types: [opened, reopened, closed, ready_for_review, merged]

permissions:
  issues: write
  pull-requests: write
  repository-projects: write
  contents: read

jobs:
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo 'PROJECT_ID=PVT_kwHOAdW7184AxxPJ' >> $GITHUB_ENV
          echo 'STATUS_FIELD_ID=PVTSSF_lAHOAdW7184AxxPJzgn1GHc' >> $GITHUB_ENV
          echo 'BACKLOG_OPTION_ID=f75ad846' >> $GITHUB_ENV
          echo 'IN_PROGRESS_OPTION_ID=47fc9ee4' >> $GITHUB_ENV
          echo 'REVIEW_OPTION_ID=98236657' >> $GITHUB_ENV
          echo 'DONE_OPTION_ID=9dc3432f' >> $GITHUB_ENV

      - uses: actions/add-to-project@v0.5.0
        with:
          project-url: https://github.com/users/rafaumeu/projects/4
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Update issue status
        if: github.event_name == 'issues'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const status = context.payload.action === 'opened' ? '🎯 Backlog' :
                          context.payload.action === 'closed' ? '✅ Done' : null;

            if (status) {
              await github.rest.projects.updateCard({
                card_id: context.payload.project_card.id,
                column_name: status
              });
            }

      - name: Update PR status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const status = context.payload.action === 'opened' ? '🏗️ In Progress' :
                          context.payload.action === 'ready_for_review' ? '👀 Review' :
                          (context.payload.action === 'closed' || context.payload.pull_request.merged) ? '✅ Done' : null;

            if (status) {
              await github.rest.projects.updateCard({
                card_id: context.payload.project_card.id,
                column_name: status
              });
            }
